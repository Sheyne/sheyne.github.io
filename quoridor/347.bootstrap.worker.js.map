{"version":3,"file":"347.bootstrap.worker.js","mappings":"gLAEA,MAAMA,EAAO,IAAIC,MAAM,IAAIC,UAAKC,GAIhC,SAASC,EAAUC,GAAO,OAAOL,EAAKK,GAFtCL,EAAKM,UAAKH,EAAW,MAAM,GAAM,GAIjC,IAAII,EAAkB,EAElBC,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqBE,SAAW,kBACjEF,EAAuB,IAAIG,WAAW,kBAEnCH,EAKX,IAAII,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIC,EAAOC,SAAS,QAAQF,YAAcA,aAE3D,SAEzC,MAAMG,EAAwD,mBAAjCJ,EAAkBK,WACzC,SAAUC,EAAKC,GACjB,OAAOP,EAAkBK,WAAWC,EAAKC,IAEvC,SAAUD,EAAKC,GACjB,MAAMC,EAAMR,EAAkBS,OAAOH,GAErC,OADAC,EAAKG,IAAIF,GACF,CACHG,KAAML,EAAIM,OACVC,QAASL,EAAII,SA0CrB,IAAIE,EAAuB,KAC3B,SAASC,IAIL,OAH6B,OAAzBD,GAAiCA,EAAqBhB,SAAW,kBACjEgB,EAAuB,IAAIE,WAAW,kBAEnCF,EAGX,IAAIG,EAAY7B,EAAKwB,OAQrB,SAASM,EAAWzB,GAChB,MAAM0B,EAAM3B,EAAUC,GAEtB,OATJ,SAAoBA,GACZA,EAAM,KACVL,EAAKK,GAAOwB,EACZA,EAAYxB,GAKZ2B,CAAW3B,GACJ0B,EAKX,IAAIE,EAAoB,IAFoB,oBAAhBC,aAA8B,EAAIpB,EAAOC,SAAS,QAAQmB,YAAcA,aAE3D,QAAS,CAAEC,WAAW,EAAMC,OAAO,IAI5E,SAASC,EAAmBC,EAAKC,GAC7B,OAAON,EAAkBO,OAAO/B,IAAkBgC,SAASH,EAAKA,EAAMC,IAG1E,SAASG,EAAcC,GACfd,IAAc7B,EAAKwB,QAAQxB,EAAKM,KAAKN,EAAKwB,OAAS,GACvD,MAAMnB,EAAMwB,EAIZ,OAHAA,EAAY7B,EAAKK,GAEjBL,EAAKK,GAAOsC,EACLtC,EAZX4B,EAAkBO,SAgBOI,OAAOC,OAAO,CAAEC,GAAG,EAAE,EAAI,KAAKC,KAAK,EAAE,EAAI,OAAOC,KAAK,EAAE,EAAI,OAAOC,MAAM,EAAE,EAAI,UAG9EL,OAAOC,OAAO,CAAEK,MAAM,EAAE,EAAI,QAAQC,WAAW,EAAE,EAAI,aAAaC,SAAS,EAAE,EAAI,aAG/ER,OAAOC,OAAO,CAAEM,WAAW,EAAE,EAAI,aAAaC,SAAS,EAAE,EAAI,aAGlER,OAAOC,OAAO,CAAEQ,OAAO,EAAE,EAAI,SAASC,MAAM,EAAE,EAAI,UAGjE,MAAMC,EAETC,cAAclB,GACV,MAAMK,EAAMC,OAAOa,OAAOF,EAAGG,WAG7B,OAFAf,EAAIL,IAAMA,EAEHK,EAGXgB,qBACI,MAAMrB,EAAMsB,KAAKtB,IAGjB,OAFAsB,KAAKtB,IAAM,EAEJA,EAGXuB,OACI,MAAMvB,EAAMsB,KAAKD,qBACjB,gBAAmBrB,GAIvBwB,cACI,IAAI/B,EAAM,WACV,OAAOwB,EAAGQ,OAAOhC,GAIrBiC,aACI,gBAAmBJ,KAAKtB,KAK5B2B,UAAUC,GACN,eAAkBN,KAAKtB,IAAK4B,GAKhCC,KAAKC,GACD,UAAaR,KAAKtB,IAAKI,EAAc0B,IAKzCC,UAEI,OAAOvC,EADG,aAAgB8B,KAAKtB,OAiJhC,MAAMgC,EAA4B,SAASC,EAAMC,GACpD,MAAM7B,EAAMvC,EAAUoE,GACtB,IACIC,EA/RR,SAA2BvD,EAAKwD,EAAQC,GAEpC,QAAgBxE,IAAZwE,EAAuB,CACvB,MAAMvD,EAAMR,EAAkBS,OAAOH,GAC/BoB,EAAMoC,EAAOtD,EAAII,QAGvB,OAFAf,IAAkBgC,SAASH,EAAKA,EAAMlB,EAAII,QAAQF,IAAIF,GACtDb,EAAkBa,EAAII,OACfc,EAGX,IAAIC,EAAMrB,EAAIM,OACVc,EAAMoC,EAAOnC,GAEjB,MAAMqC,EAAMnE,IAEZ,IAAIoE,EAAS,EAEb,KAAOA,EAAStC,EAAKsC,IAAU,CAC3B,MAAMC,EAAO5D,EAAI6D,WAAWF,GAC5B,GAAIC,EAAO,IAAM,MACjBF,EAAItC,EAAMuC,GAAUC,EAGxB,GAAID,IAAWtC,EAAK,CACD,IAAXsC,IACA3D,EAAMA,EAAI8D,MAAMH,IAEpBvC,EAAMqC,EAAQrC,EAAKC,EAAKA,EAAMsC,EAAsB,EAAb3D,EAAIM,QAC3C,MAAML,EAAOV,IAAkBgC,SAASH,EAAMuC,EAAQvC,EAAMC,GAG5DsC,GAFY7D,EAAaE,EAAKC,GAEhBM,QAIlB,OADAlB,EAAkBsE,EACXvC,EA4PI2C,CADDC,KAAKC,eAAkBhF,IAARwC,EAAoB,KAAOA,GAClB,oBAAwB,sBACtDyC,EAAO7E,EACXoB,IAAkB4C,EAAO,EAAI,GAAKa,EAClCzD,IAAkB4C,EAAO,EAAI,GAAKE,GAGzBY,EAA6B,SAASd,GAC/CzC,EAAWyC,IAGFe,EAAwB,SAASf,EAAMC,GAEhD,OAAO9B,EADGwC,KAAKK,MAAMlD,EAAmBkC,EAAMC,MAIrCgB,EAAmB,SAASjB,EAAMC,GAC3C,MAAM,IAAIiB,MAAMpD,EAAmBkC,EAAMC,M,kCChV7C,IAAIkB,EAAK,IAAI,KAEbC,UAAY,SAASC,GACjB,GAAIA,EAAEC,KAAKC,KACP,QAA4B3F,IAAxByF,EAAEC,KAAKC,KAAKC,QACZL,EAAG7B,OACH6B,EAAK,IAAI,UACN,GAAIE,EAAEC,KAAKC,KAAKE,QAAS,CAC5BN,EAAG7B,OACH6B,EAAK,IAAI,KACT,IAAK,IAAII,KAAQF,EAAEC,KAAKC,KAAKE,QACzBN,EAAGvB,KAAK2B,QAGZJ,EAAGvB,KAAKyB,EAAEC,KAAKC,MACfG,YAAYP,EAAGrB,eAEM,UAAlBuB,EAAEC,KAAKK,QACdR,EAAG1B,aACI4B,EAAEC,KAAKK,SAAWN,EAAEC,KAAKK,QAAQC,OACxCT,EAAGzB,UAAU2B,EAAEC,KAAKK,QAAQC,S","sources":["webpack://quoridor/../pkg/quoridor_wasm_bg.js","webpack://quoridor/./ai_worker.js"],"sourcesContent":["import * as wasm from './quoridor_wasm_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n/**\n*/\nexport const Direction = Object.freeze({ Up:0,\"0\":\"Up\",Down:1,\"1\":\"Down\",Left:2,\"2\":\"Left\",Right:3,\"3\":\"Right\", });\n/**\n*/\nexport const WallState = Object.freeze({ Empty:0,\"0\":\"Empty\",Horizontal:1,\"1\":\"Horizontal\",Vertical:2,\"2\":\"Vertical\", });\n/**\n*/\nexport const Orientation = Object.freeze({ Horizontal:0,\"0\":\"Horizontal\",Vertical:1,\"1\":\"Vertical\", });\n/**\n*/\nexport const AiKind = Object.freeze({ Greedy:0,\"0\":\"Greedy\",Rubot:1,\"1\":\"Rubot\", });\n/**\n*/\nexport class Ai {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Ai.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_ai_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.ai_new();\n        return Ai.__wrap(ret);\n    }\n    /**\n    */\n    set_greedy() {\n        wasm.ai_set_greedy(this.ptr);\n    }\n    /**\n    * @param {number} steps\n    */\n    set_rubot(steps) {\n        wasm.ai_set_rubot(this.ptr, steps);\n    }\n    /**\n    * @param {any} mov\n    */\n    send(mov) {\n        wasm.ai_send(this.ptr, addHeapObject(mov));\n    }\n    /**\n    * @returns {any}\n    */\n    receive() {\n        var ret = wasm.ai_receive(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n*/\nexport class Game {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Game.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_game_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        var ret = wasm.game_new();\n        return Game.__wrap(ret);\n    }\n    /**\n    * @returns {number | undefined}\n    */\n    result() {\n        var ret = wasm.game_result(this.ptr);\n        return ret === 0xFFFFFF ? undefined : ret;\n    }\n    /**\n    * @returns {Game}\n    */\n    copy() {\n        var ret = wasm.game_copy(this.ptr);\n        return Game.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    current_player() {\n        var ret = wasm.game_current_player(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} player\n    * @returns {Location}\n    */\n    get_location(player) {\n        var ret = wasm.game_get_location(this.ptr, player);\n        return Location.__wrap(ret);\n    }\n    /**\n    * @param {number} player\n    * @returns {number}\n    */\n    available_walls(player) {\n        var ret = wasm.game_available_walls(this.ptr, player);\n        return ret;\n    }\n    /**\n    * @param {any} mov\n    * @returns {boolean}\n    */\n    apply_move(mov) {\n        var ret = wasm.game_apply_move(this.ptr, addHeapObject(mov));\n        return ret !== 0;\n    }\n    /**\n    * @param {number} player\n    * @returns {number}\n    */\n    distance_to_goal(player) {\n        var ret = wasm.game_distance_to_goal(this.ptr, player);\n        return ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {number}\n    */\n    get_wall_status(x, y) {\n        var ret = wasm.game_get_wall_status(this.ptr, x, y);\n        return ret >>> 0;\n    }\n}\n/**\n*/\nexport class Location {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Location.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_location_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get x() {\n        var ret = wasm.__wbg_get_location_x(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set x(arg0) {\n        wasm.__wbg_set_location_x(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get y() {\n        var ret = wasm.__wbg_get_location_y(this.ptr);\n        return ret;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set y(arg0) {\n        wasm.__wbg_set_location_y(this.ptr, arg0);\n    }\n}\n\nexport const __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n","import * as wasm from \"quoridor-wasm\";\n\nlet ai = new wasm.Ai();\n\nonmessage = function(e) {\n    if (e.data.move) {\n        if (e.data.move.Restart !== undefined) {\n            ai.free();\n            ai = new wasm.Ai();\n        } else if (e.data.move.StartAt) {\n            ai.free();\n            ai = new wasm.Ai();\n            for (let move of e.data.move.StartAt) {\n                ai.send(move);\n            }\n        } else {\n            ai.send(e.data.move);\n            postMessage(ai.receive());\n        }\n    } else if (e.data.setMode == \"greedy\") {\n        ai.set_greedy()\n    } else if (e.data.setMode && e.data.setMode.rubot) {\n        ai.set_rubot(e.data.setMode.rubot)\n    }\n}\n  "],"names":["heap","Array","fill","undefined","getObject","idx","push","WASM_VECTOR_LEN","cachegetUint8Memory0","getUint8Memory0","buffer","Uint8Array","cachedTextEncoder","TextEncoder","module","require","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","ptr","len","decode","subarray","addHeapObject","obj","Object","freeze","Up","Down","Left","Right","Empty","Horizontal","Vertical","Greedy","Rubot","Ai","static","create","prototype","__destroy_into_raw","this","free","constructor","__wrap","set_greedy","set_rubot","steps","send","mov","receive","__wbindgen_json_serialize","arg0","arg1","ptr0","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","JSON","stringify","len0","__wbindgen_object_drop_ref","__wbindgen_json_parse","parse","__wbindgen_throw","Error","ai","onmessage","e","data","move","Restart","StartAt","postMessage","setMode","rubot"],"sourceRoot":""}